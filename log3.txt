ID = 3
ExeStack:
   a = bool;v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
SymTable:
   a -> true
   v -> 2
Out:
   2
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool;v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
SymTable:
   a -> true
   v -> 2
Out:
   2
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool;v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
SymTable:
   a -> true
   v -> 2
Out:
   2
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool;v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
SymTable:
   a -> true
   v -> 2
Out:
   2
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool;v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = bool
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int;a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = int
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true;if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   a = true
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> false
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3};print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   if(a){v = 2}else{v = 3}
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   v = 2
   print(v)
SymTable:
   a -> true
   v -> 0
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
   print(v)
SymTable:
   a -> true
   v -> 2
Out:
FileTable:
Heap:

ID = 3
ExeStack:
SymTable:
   a -> true
   v -> 2
Out:
   2
FileTable:
Heap:

